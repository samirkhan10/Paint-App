// Generated by view binder compiler. Do not edit!
package com.raghav.paint.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.slider.RangeSlider;
import com.raghav.paint.DrawView;
import com.raghav.paint.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnColor;

  @NonNull
  public final ImageButton btnSave;

  @NonNull
  public final ImageButton btnStroke;

  @NonNull
  public final ImageButton btnUndo;

  @NonNull
  public final DrawView drawView;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final RangeSlider rangebar;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton btnColor,
      @NonNull ImageButton btnSave, @NonNull ImageButton btnStroke, @NonNull ImageButton btnUndo,
      @NonNull DrawView drawView, @NonNull LinearLayout linear, @NonNull RangeSlider rangebar) {
    this.rootView = rootView;
    this.btnColor = btnColor;
    this.btnSave = btnSave;
    this.btnStroke = btnStroke;
    this.btnUndo = btnUndo;
    this.drawView = drawView;
    this.linear = linear;
    this.rangebar = rangebar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_color;
      ImageButton btnColor = ViewBindings.findChildViewById(rootView, id);
      if (btnColor == null) {
        break missingId;
      }

      id = R.id.btn_save;
      ImageButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_stroke;
      ImageButton btnStroke = ViewBindings.findChildViewById(rootView, id);
      if (btnStroke == null) {
        break missingId;
      }

      id = R.id.btn_undo;
      ImageButton btnUndo = ViewBindings.findChildViewById(rootView, id);
      if (btnUndo == null) {
        break missingId;
      }

      id = R.id.draw_view;
      DrawView drawView = ViewBindings.findChildViewById(rootView, id);
      if (drawView == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.rangebar;
      RangeSlider rangebar = ViewBindings.findChildViewById(rootView, id);
      if (rangebar == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, btnColor, btnSave, btnStroke,
          btnUndo, drawView, linear, rangebar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
